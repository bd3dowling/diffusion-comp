[tool.poetry]
name = "diffusionlib"
version = "0.1.0"
description = "Library for diffusion modelling and inverse problem solving"
authors = ["Ben Dowling <ben.dowling@icloud.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
numpy = "^1.26"
matplotlib = "^3.8.2"
seaborn = "^0.13.0"
optax = "^0.1.7"
ffmpeg = "^1.4"
equinox = "^0.11.4"
flax = "^0.8.4"
orbax = "^0.1.9"
tensorflow = "^2.16.1"
conda-lock = "^2.5.7"
mlkernels = "^0.4.0"
tensorflow-datasets = "^4.9.6"
wandb = "^0.17.1"
tqdm = "^4.66.4"
fastmri = "^0.3.0"
pyyaml = "^6.0.1"
opencv-python = "^4.10.0.82"
lmdb = "^1.4.1"
ninja = "^1.11.1.1"
tensorflow-gan = "^2.1.0"
tensorflow-hub = "^0.16.1"
tensorflow-probability = "^0.24.0"
ml-collections = "^0.1.1"
numpyro = "^0.15.0"
pot = "^0.9.3"
pydantic = "^2.7.3"
probit = "^0.0.2"
particles = {extras = ["extra"], version = "^0.4"}

# Extras (for external use)
jax = {extras = ["cuda12"], version = "^0.4.28"}
torch = {version = "^2.3.1", optional = true}
torchvision = {version = "^0.18.1", optional = true}
torchaudio = {version = "^2.3.1", optional = true}

[tool.poetry.extras]
cuda = ["jax", "torch", "torchvision", "torchaudio"] 

# Optionals (for internal dev)
[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.6"
pytest = "^7.4.3"
mypy = "^1.7.1"
pylint = "^3.0.2"

[tool.poetry.group.cuda]
optional = true

[tool.poetry.group.cuda.dependencies]
jax = {extras = ["cuda12"], version = "^0.4.28"}
torch = "^2.3.1"
torchvision = "^0.18.1"
torchaudio = "^2.3.1"

[tool.poetry.group.metal]
optional = true

[tool.poetry.group.metal.dependencies]
jax-metal = "^0.0.7"
jax = "^0.4.26"
jaxlib = "^0.4.26"

[[tool.poetry.source]]
name = "nvidia"
url = "https://pypi.nvidia.com/"
priority = "supplemental"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
ignore_missing_imports = true
strict = true

[tool.ruff]

# E - pycodestyle error
# F - pyflakes
# I - isort
# N - pep8-naming
# W - pycodestyle warn
# UP - pyupgrade
# TODO: D - pydocstyle
select = ["E", "F", "I", "N", "W", "UP"]

ignore = [
    "N812", # lowercase-imported-as-non-lowercase
    "F722" # forward-annotation-syntax-error; for jaxtyping
]

line-length = 100

exclude = [
    "external/"
]